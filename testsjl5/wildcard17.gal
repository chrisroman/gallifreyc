class Box< T > {
  public T t; 
  public boolean equalTo( Box< T > other) { return this.t.equals(other.t); }
  
      public Box(T t) { this.t = t; }
      public void put( T t) { this.t = t;}
      public T take() { return t; }

      public boolean contains( T t) { return this.t == t; }
      public String toString() { return "Box["+t.toString()+"]"; }
  public void takeContentFrom( Box<? extends T > box) { t = box.t; }
  public Class<? extends T > getContentType() { return null;} 
  public int compareTo( Comparable<? super T > other) { return other.compareTo(t); }
  public Box<? super T > copy() { return new Box<T>(t); }  
}

class Test {
  public static void main(String[] args) {
    Box<? super Long > box = new Box<Number>(0L);
    Number number = new Integer(1);

    box.t = 1L;      // ok
    box.t = null;     // ok
    box.t = number;    // error

    Long   l = box.t;  // error
    Number n = box.t;  // error
    Object o = box.t;  // ok
  }
} 